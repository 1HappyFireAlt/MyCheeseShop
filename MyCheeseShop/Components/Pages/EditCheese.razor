@page "/edit-cheese"
@using Microsoft.AspNetCore.Authorization
@using MyCheeseShop.Context
@using MyCheeseShop.Model
@inject CheeseProvider CheeseProvider
@attribute [Authorize(Roles = "Admin")]

<PageTitle>CheeseShop - Edit Cheese</PageTitle>

<h3>Edit Cheese</h3>

@if (cheeses is null)
{
    <p>Loading...</p>
}
else if (!cheeses.Any())
{
    <p>🙁 No cheeses found</p>
}
else
{
    <div class="col-md-5 col-12 mb-2">
        <select id="cheeseSelect" class="form-select" @onchange="OnCheeseSelected">
            @foreach (var cheese in cheeses)
            {
                <option value="@cheese.Id">@cheese.Name</option>
            }
        </select>
    </div>

    <CheeseForm Cheese="selectedCheese" />
}
<EditForm OnValidSubmit="Submit" EditContext="editContext">
    <div class="row">
        <div class="col-lg-6 col-12 mt-1">
            <div class="card h-100">
                <div class="card-body bg-light d-flex flex-column">
                    <h4 class="card-title">Cheese details</h4>
                    <div class="form-group mb-2">
                        <label for="name">Name</label>
                        <input id="name" placeholder="Name" name="Model.Name" class="form-control valid" />
                    </div>
                    <div class="form-group mb-2">
                        <label for="type">Type</label>
                        <input id="type" placeholder="Type" name="Model.Type" class="form-control valid" />
                    </div>
                    <div class="form-group mb-2">
                        <label for="description">Description</label>
                        <input id="description" placeholder="Description" name="Model.Description" class="form-control valid" />
                    </div>
                    <div class="form-group mb-2">
                        <label for="strength">Strength</label>
                        <input id="strength" placeholder="Strength" name="Model.Strength" class="form-control valid" />
                    </div>
                    <div class="form-group mb-2">
                        <label for="price">Price</label>
                        <input id="price" placeholder="9.99" min="0.01" max="10000.00" step="0.01" type="number" name="Model.Price" class="form-control valid" />
                    </div>
                </div>
            </div>
            <div class="mt-auto">
                <button type="submit" class="btn btn-outline-primary w-100">Update Cheese</button>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-12 mt-1">
        <div class="form-group mb-2">
            <div class="card-body bg-light d-flex flex-column">
                <h4 class="card-title">Cheese image</h4>
                <div class="form-group mb-2">
                    <input id="imageUrl" class="form-control" value="Cheese.ImageUrl" type="file" />
                </div>
                <div class="mb-2">
                    <img src="~/img/cheeses/Cheese.ImageUrl" class="img-thumbnail card-img-left" alt="Cheese.Name" onerror="this.onerror = null; this.src='/img/no_cheese.png'">
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    private IEnumerable<Cheese>? cheeses;
    private int? selectedCheeseId;
    private EditContext editContext;
    private Cheese? selectedCheese;

    protected async override Task OnInitializedAsync()
    {
        cheeses = await CheeseProvider.GetAllCheesesAsync();
        selectedCheese = cheeses?.FirstOrDefault();
        selectedCheeseId = selectedCheese?.Id;
    }

    private async Task Submit()
    {}

    private void OnCheeseSelected(ChangeEventArgs e)
    {
        if (e.Value is null) return;
        selectedCheeseId = int.Parse(e.Value.ToString()!);
        selectedCheese = cheeses?.FirstOrDefault(cheese => cheese.Id == selectedCheeseId);
    }
}
